Thu 13 Jul 2023 14:03:35 INFO  
General Hyper Parameters:
gpu_id = 0
use_gpu = True
seed = 2020
state = INFO
reproducibility = False
data_path = data1/dataset
checkpoint_dir = saved
show_progress = True
save_dataset = False
dataset_save_path = None
save_dataloaders = False
dataloaders_save_path = None
log_wandb = False

Training Hyper Parameters:
epochs = 2
train_batch_size = 2048
learner = adam
learning_rate = 0.001
train_neg_sample_args = {'distribution': 'none', 'sample_num': 'none', 'alpha': 'none', 'dynamic': False, 'candidate_num': 0}
eval_step = 1
stopping_step = 10
clip_grad_norm = None
weight_decay = 0.0
loss_decimal_place = 4

Evaluation Hyper Parameters:
eval_args = {'group_by': 'user', 'order': 'TO', 'split': {'LS': 'valid_and_test'}, 'mode': 'full'}
repeatable = True
metrics = ['Recall', 'MRR', 'NDCG', 'Hit', 'Precision']
topk = [10]
valid_metric = MRR@10
valid_metric_bigger = True
eval_batch_size = 2048
metric_decimal_place = 4

Dataset Hyper Parameters:
field_separator = 	
seq_separator =  
USER_ID_FIELD = user_id
ITEM_ID_FIELD = item_id
RATING_FIELD = rating
TIME_FIELD = timestamp
seq_len = None
LABEL_FIELD = label
threshold = None
NEG_PREFIX = neg_
load_col = {'inter': ['user_id', 'item_id', 'timestamp']}
unload_col = None
unused_col = None
additional_feat_suffix = None
rm_dup_inter = None
val_interval = None
filter_inter_by_user_or_item = True
user_inter_num_interval = [0,inf)
item_inter_num_interval = [0,inf)
alias_of_user_id = None
alias_of_item_id = None
alias_of_entity_id = None
alias_of_relation_id = None
preload_weight = None
normalize_field = None
normalize_all = None
ITEM_LIST_LENGTH_FIELD = item_length
LIST_SUFFIX = _list
MAX_ITEM_LIST_LENGTH = 50
POSITION_FIELD = position_id
HEAD_ENTITY_ID_FIELD = head_id
TAIL_ENTITY_ID_FIELD = tail_id
RELATION_ID_FIELD = relation_id
ENTITY_ID_FIELD = entity_id
benchmark_filename = None

Other Hyper Parameters: 
worker = 0
wandb_project = recbole
shuffle = True
require_pow = False
enable_amp = False
enable_scaler = False
transform = None
embedding_size = 64
kernel_size = 3
block_num = 5
dilations = [1, 4]
reg_weight = 1e-05
loss_type = CE
numerical_features = []
discretization = None
kg_reverse_r = False
entity_kg_num_interval = [0,inf)
relation_kg_num_interval = [0,inf)
MODEL_TYPE = ModelType.SEQUENTIAL
MODEL_INPUT_TYPE = InputType.POINTWISE
eval_type = EvaluatorType.RANKING
single_spec = True
local_rank = 0
device = cpu
eval_neg_sample_args = {'distribution': 'uniform', 'sample_num': 'none'}


Thu 13 Jul 2023 14:26:14 INFO  dataset
The number of users: 85871
Average actions of users: 3.7697100267846744
The number of items: 2966
Average actions of items: 109.17537942664418
The number of inters: 323705
The sparsity of the dataset: 99.87290404156785%
Remain Fields: ['user_id', 'item_id', 'timestamp']
Thu 13 Jul 2023 14:26:48 INFO  [Training]: train_batch_size = [2048] train_neg_sample_args: [{'distribution': 'none', 'sample_num': 'none', 'alpha': 'none', 'dynamic': False, 'candidate_num': 0}]
Thu 13 Jul 2023 14:26:48 INFO  [Evaluation]: eval_batch_size = [2048] eval_args: [{'group_by': 'user', 'order': 'TO', 'split': {'LS': 'valid_and_test'}, 'mode': 'full'}]
Thu 13 Jul 2023 14:27:30 INFO  NextItNet(
  (item_embedding): Embedding(2966, 64, padding_idx=0)
  (residual_blocks): Sequential(
    (0): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(2, 2))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (1): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(4, 4))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(8, 8))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (2): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(2, 2))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (3): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(4, 4))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(8, 8))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (4): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(2, 2))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (5): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(4, 4))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(8, 8))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (6): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(2, 2))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (7): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(4, 4))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(8, 8))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (8): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(2, 2))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
    (9): ResidualBlock_b(
      (conv1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(4, 4))
      (ln1): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), dilation=(8, 8))
      (ln2): LayerNorm((64,), eps=1e-08, elementwise_affine=True)
    )
  )
  (final_layer): Linear(in_features=64, out_features=64, bias=True)
  (loss_fct): CrossEntropyLoss()
  (reg_loss): RegLoss()
)
Trainable parameters: 443584
Thu 13 Jul 2023 14:33:23 INFO  epoch 0 training [time: 333.84s, train loss: 404.7268]
Thu 13 Jul 2023 14:33:23 INFO  Saving current: saved\NextItNet-Jul-13-2023_14-27-49.pth
Thu 13 Jul 2023 14:39:18 INFO  epoch 1 training [time: 355.32s, train loss: 399.3483]
Thu 13 Jul 2023 14:39:18 INFO  Saving current: saved\NextItNet-Jul-13-2023_14-27-49.pth
